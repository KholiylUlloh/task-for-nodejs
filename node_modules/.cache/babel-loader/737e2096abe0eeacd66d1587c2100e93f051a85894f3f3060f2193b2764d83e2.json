{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  disabled: \"\",\n  value: \"\"\n}, \"select an option\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"5\"\n}, \"5\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"10\"\n}, \"10\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_2, _hoisted_3, _hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, \"Count:\" + _toDisplayString(_ctx.count), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.increment && $options.increment(...args))\n  }, \"+\"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.amount = $event)\n  }, _hoisted_5, 512 /* NEED_PATCH */), [[_vModelSelect, $data.amount]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.increment && $options.increment(...args))\n  }, _toDisplayString($data.amount), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAK;gCAITC,oBAA4D;EAApDC,QAAQ,EAAR,EAAQ;EAACC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,kBAAgB;gCACnDH,oBAA4B;EAApBG,KAAK,EAAC;AAAG,GAAC,GAAC;gCACnBH,oBAA8B;EAAtBG,KAAK,EAAC;AAAI,GAAC,IAAE;oBAFrBC,UAA4D,EAC5DC,UAA4B,EAC5BC,UAA8B;;uBANlCC,oBASM,OATNC,UASM,GARJR,oBAA0B,YAAtB,QAAM,oBAAGS,UAAK,kBAClBT,oBAAqC;IAA5BU,OAAK,yCAAEC,iDAAS;KAAE,GAAC,mBAC5BX,oBAIS;+DAJQY,YAAM;yDAANA,YAAM,KAKvBZ,oBAAgD;IAAvCU,OAAK,yCAAEC,iDAAS;sBAAKC,YAAM","names":["id","_createElementVNode","selected","disabled","value","_hoisted_2","_hoisted_3","_hoisted_4","_createElementBlock","_hoisted_1","_ctx","onClick","$options","$data"],"sourceRoot":"","sources":["/Users/ahmadjonov/Desktop/vuex-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Count:{{ count }}</h1>\n    <button @click=\"increment\">+</button>\n    <select v-model=\"amount\">\n      <option selected disabled value=\"\">select an option</option>\n      <option value=\"5\">5</option>\n      <option value=\"10\">10</option>\n    </select>\n    <button @click=\"increment\">{{ amount }}</button>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters } from 'vuex';\n\n\n\nexport default {\n  name: 'App',\n\n  data(){\n    return{\n      amount: 0\n    }\n  },\n  computed:{\n    ...mapState([\n      'count',\n      'todos'\n    ]),\n    ...mapGetters([\n      'doneTodosCount'\n    ])\n  },\n  methods:{\n    increment (){\n       this.$store.commit(\"increment\")\n    },\n    incrementByAmount(){\n       this.$store.commit(\"incrementByAmount\")\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}