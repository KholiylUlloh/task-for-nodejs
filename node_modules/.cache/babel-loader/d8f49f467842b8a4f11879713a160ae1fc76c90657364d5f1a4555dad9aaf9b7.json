{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5b2f7148\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Messages\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.numbersArr, numbers => {\n    return _openBlock(), _createElementBlock(\"ul\", null, [_createElementVNode(\"li\", null, _toDisplayString(numbers), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;gEAEIA,oBAAiB,YAAb,UAAQ;;;uBADdC,oBAOM,cANJC,UAAiB,qBACjBD,oBAIKE,6BAJiBC,gBAAU,EAArBC,OAAO;yBAAlBJ,oBAIK,aAHHD,oBAEK,6BADDK,OAAO","names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","$data","numbers"],"sourceRoot":"","sources":["/Users/ahmadjonov/Desktop/Desktop/vuex-app/src/components/messages.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Messages</h1>\n    <ul v-for=\"numbers in numbersArr\">\n      <li>\n        {{numbers}}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {computed} from \"vue\";\n\nexport default {\n  name: \"messages\",\n  data() {\n    return {\n      numbersArr: []\n    }\n  },\n  methods:{\n    async fetchData() {\n        let res = await axios.get(\"http://localhost:3001/get\")\n            .then((response) => {\n              this.numbersArr = response.data.result\n              console.log(this.numbersArr)\n        })\n            .catch((error) => {\n              console.log(error)\n            })\n\n    }\n  },\n  mounted() {\n    this.fetchData()\n  }\n}\n</script>\n\n<style scoped>\ndiv{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}