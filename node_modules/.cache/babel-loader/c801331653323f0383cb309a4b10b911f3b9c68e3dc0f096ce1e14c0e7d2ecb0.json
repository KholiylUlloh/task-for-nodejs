{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Count:\" + /*#__PURE__*/_toDisplayString(this), -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAK;gCACXC,oBAAyB,YAArB,QAAM,iCAAG,IAAI;oBAAjBC,UAAyB;;uBAD3BC,oBAEM,OAFNC,UAEM","names":["id","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["/Users/ahmadjonov/Desktop/vuex-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Count:{{ this }}</h1>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n\n  computed:{\n    count: state => state.count\n  },\n  methods:{\n    increment(){\n      this.$store.commit('increment')\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}