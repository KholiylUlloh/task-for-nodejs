{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5b2f7148\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"shadow p-3 mb-5 bg-white rounded\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.numbersArr, numbers => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, _toDisplayString(numbers), 1 /* TEXT */)])]);\n  }), 256 /* UNKEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACeA,KAAK,EAAC;AAAkC;;uBAD7EC,oBAQM,OARNC,UAQM,sBAPJD,oBAMME,6BANiBC,gBAAU,EAArBC,OAAO;yBAAnBJ,oBAMM,OANNK,UAMM,GALJC,oBAIK,aAHHA,oBAEK,6BADDF,OAAO","names":["class","_createElementBlock","_hoisted_1","_Fragment","$data","numbers","_hoisted_2","_createElementVNode"],"sourceRoot":"","sources":["/Users/ahmadjonov/Desktop/Desktop/vuex-app/src/components/messages.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div v-for=\"numbers in numbersArr\" class=\"shadow p-3 mb-5 bg-white rounded\">\n      <ul>\n        <li>\n          {{numbers}}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {computed} from \"vue\";\n\nexport default {\n  name: \"messages\",\n  data() {\n    return {\n      numbersArr: []\n    }\n  },\n  methods:{\n    async fetchData() {\n        let res = await axios.get(\"http://localhost:3001/getmessages\")\n            .then((response) => {\n              response?.data?.arrContent.forEach(item => {\n                item.forEach(i => {\n                  this.numbersArr.push(i.replace(\"\\n\", \"\"));\n                })\n              })\n        })\n            .catch((error) => {\n              console.log(error)\n            })\n\n    }\n  },\n  mounted() {\n    this.fetchData()\n  }\n}\n</script>\n\n<style scoped>\n.container{\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}