{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-780ec81c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"w-100 shadow p-3 bg-white rounded\"\n};\nconst _hoisted_3 = {\n  class: \"shadow p-3 mb-1 bg-white rounded\"\n};\nconst _hoisted_4 = {\n  class: \"form-control h-100 w-100\"\n};\nconst _hoisted_5 = {\n  class: \"col-sm-10\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data, number => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, _toDisplayString(number), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputValue = $event),\n    type: \"text\",\n    class: \"form-control\",\n    id: \"inputPassword\",\n    placeholder: \"Type a Number\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.inputValue]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.author = $event),\n    type: \"text\",\n    class: \"form-control\",\n    id: \"inputName\",\n    placeholder: \"who are you\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.author]])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.postData && $options.postData(...args)),\n    class: \"btn m-2 btn-primary\"\n  }, \"Submit\")])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAmC;;EACfA,KAAK,EAAC;AAAkC;;EAIlEA,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAAW;;uBAP1BC,oBAaM,OAbNC,UAaM,GAZJC,oBAIM,OAJNC,UAIM,sBAHJH,oBAEMI,6BAFgBC,UAAI,EAAdC,MAAM;yBAAlBN,oBAEM,OAFNO,UAEM,GADJL,oBAAqB,8BAAdI,MAAM;sCAGjBJ,oBAMM,OANNM,UAMM,GALJN,oBAGM,OAHNO,UAGM,mBAFJP,oBAA4G;+DAA5FG,gBAAU;IAAEK,IAAI,EAAC,MAAM;IAACX,KAAK,EAAC,cAAc;IAACY,EAAE,EAAC,eAAe;IAACC,WAAW,EAAC;iDAA5EP,gBAAU,qBAC1BH,oBAAkG;+DAAlFG,YAAM;IAAEK,IAAI,EAAC,MAAM;IAACX,KAAK,EAAC,cAAc;IAACY,EAAE,EAAC,WAAW;IAACC,WAAW,EAAC;iDAApEP,YAAM,OAExBH,oBAAqE;IAA5DW,OAAK,yCAAEC,+CAAQ;IAAEf,KAAK,EAAC;KAAsB,QAAM","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","$data","number","_hoisted_3","_hoisted_4","_hoisted_5","type","id","placeholder","onClick","$options"],"sourceRoot":"","sources":["/Users/ahmadjonov/Desktop/Desktop/vuex-app/src/components/postMessages.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"w-100 shadow p-3 bg-white rounded\">\n      <div v-for=\"number in data\"  class=\"shadow p-3 mb-1 bg-white rounded\">\n        <div>{{number}}</div>\n      </div>\n    </div>\n    <div class=\"form-control h-100  w-100\">\n      <div class=\"col-sm-10\">\n        <input v-model=\"inputValue\" type=\"text\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Type a Number\">\n        <input v-model=\"author\" type=\"text\" class=\"form-control\" id=\"inputName\" placeholder=\"who are you\">\n      </div>\n      <button @click=\"postData\" class=\"btn m-2 btn-primary\">Submit</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"postMessages\",\n  data(){\n    return{\n      inputValue: '',\n      author: '',\n      data: []\n    }\n  },\n  methods:{\n    async fetchData() {\n      await axios.get(\"http://localhost:3001/getmessages\")\n          .then((response) => {\n            let content = response?.data?.arrContent\n            this.data = content[content.length - 1]\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n    },\n    postData(){\n      axios.post(\"http://localhost:3001/calculate\",{\n        author_name: this.author,\n        n: this.inputValue\n      })\n      this.inputValue = \"\"\n      this.author = \"\"\n    }\n  },\n  mounted() {\n    this.fetchData()\n  }\n}\n</script>\n\n<style scoped>\n.container{\n  display: flex;\n  /*align-items: center;*/\n  justify-content: center;\n  gap: 20px;\n  padding: 50px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}