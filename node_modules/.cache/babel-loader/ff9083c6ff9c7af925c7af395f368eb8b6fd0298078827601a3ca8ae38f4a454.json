{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5b2f7148\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"number shadow p-3 mb-5 bg-white rounded\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.numbersArr, number => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(number, n => {\n      return _openBlock(), _createElementBlock(\"ul\", null, [_createElementVNode(\"li\", null, _toDisplayString(n), 1 /* TEXT */)]);\n    }), 256 /* UNKEYED_FRAGMENT */))]);\n  }), 256 /* UNKEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACeA,KAAK,EAAC;AAAyC;;uBADpFC,oBAMM,OANNC,UAMM,sBALJD,oBAIME,6BAJgBC,gBAAU,EAApBC,MAAM;yBAAlBJ,oBAIM,OAJNK,UAIM,sBAHAL,oBAEKE,6BAFWE,MAAM,EAAXE,CAAC;2BAAZN,oBAEK,aADHO,oBAAc,6BAARD,CAAC","names":["class","_createElementBlock","_hoisted_1","_Fragment","$data","number","_hoisted_2","n","_createElementVNode"],"sourceRoot":"","sources":["/Users/ahmadjonov/Desktop/Desktop/vuex-app/src/components/messages.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div v-for=\"number in numbersArr\"  class=\"number shadow p-3 mb-5 bg-white rounded\">\n          <ul v-for=\"n in number\">\n            <li>{{n}}</li>\n          </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {computed} from \"vue\";\n\nexport default {\n  name: \"messages\",\n  data() {\n    return {\n      numbersArr: []\n    }\n  },\n  methods:{\n    async fetchData() {\n        let res = await axios.get(\"http://localhost:3001/getmessages\")\n            .then((response) => {\n              response?.data?.arrContent.forEach(item => {\n                item.forEach(i => {\n                  this.numbersArr.push(JSON.stringify(i))\n                })\n              })\n        })\n            .catch((error) => {\n              console.log(error)\n            })\n\n    }\n  },\n  mounted() {\n    this.fetchData()\n  }\n}\n</script>\n\n<style scoped>\n.container{\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}